# from SCR doc: "[...] It applies a redundancy scheme to the cache such that
# checkpoints can be recovered after common system failures. It copies a subset
# of checkpoints to the parallel file system to recover from less common but
# more severe failures. In many failure cases, a job can be restarted from a
# cached checkpoint."
# https://scr.readthedocs.io/en/v3.0/

# Instruct SCR to use the CKPT descriptors from the config file
#SCR_COPY_TYPE=XOR
SCR_COPY_TYPE=FILE

# Enable debug output (0, 1 or 2 - increasing verbosity levels of debug messages)
#SCR_DEBUG=0

# Set to 0 to disable cache rebuild during SCR_Init.
#SCR_DISTRIBUTE=1

# Set to 0 to disable SCR from fetching files from the parallel file system 
# during SCR_Init.
#SCR_FETCH=1

# Specify the number of checkpoints between periodic flushes to the parallel
# file system. Set to 0 to disable periodic flushes.
#SCR_FLUSH=10
SCR_FLUSH=3

# enable asynchronous flush.
#SCR_FLUSH_ASYNC=0
SCR_FLUSH_ASYNC=1

# flush transfer method (SYNC, PTHREAD, BBAPI, or DATAWARP)
#SCR_FLUSH_TYPE=SYNC
SCR_FLUSH_TYPE=PTHREAD

# maximum number of times the scr_srun command should attempt to run a job
# within an allocation. Set to -1 to specify an unlimited number of times.
#SCR_RUNS=1

# Specify the minimum number of processes to include in an redundancy set. So
# long as there are sufficient failure groups, each redundancy set will be at
# least the minimum size. If not, redundancy sets will be as large as possible,
# but they may be smaller than the minimum size. Increasing this value can
# decrease the amount of storage required to cache the dataset. However, a
# higher value can require more time to rebuild lost files, and it increases the
# likelihood of encountering a catastrophic failure.
#SCR_SET_SIZE=8
SCR_SET_SIZE=4

# Specify the prefix directory on the parallel file system where datasets should
# be read from and written to.
#SCR_PREFIX=$PWD
SCR_PREFIX=$PWD/PFS

# Specify number of checkpoints to keep in the prefix directory. SCR deletes
# older checkpoints as new checkpoints are flushed to maintain a sliding window
# of the specified size. Set to 0 to keep all checkpoints. Checkpoints marked
# with SCR_FLAG_OUTPUT are not deleted.
#SCR_PREFIX_SIZE=0
SCR_PREFIX_SIZE=1

# enable datasets to be stored in cache if 0
#SCR_CACHE_BYPASS=1
SCR_CACHE_BYPASS=0

# Specify the default base directory SCR should use to cache datasets.
#SCR_CACHE_BASE=/dev/shm

# Set to a non-negative integer to specify the maximum number of checkpoints SCR
# should keep in cache. SCR will delete the oldest checkpoint from cache before
# saving another in order to keep the total count below this limit.
#SCR_CACHE_SIZE=1

# Whether to delete all datasets from cache during SCR_Init.
#SCR_CACHE_PURGE=0

#Set to positive number of times SCR_Need_checkpoint should be called before
# returning 1.
#SCR_CHECKPOINT_INTERVAL=0
SCR_CHECKPOINT_INTERVAL=20

# Set to positive number of seconds to specify minimum time between consecutive
# checkpoints as guided by SCR_Need_checkpoint.
#SCR_CHECKPOINT_SECONDS=0

# Set to 1 to flush checkpoints to and restart from the prefix directory during
# SCR_Init.
#SCR_GLOBAL_RESTART=0

CKPT=0 INTERVAL=1 STORE=/dev/shm TYPE=XOR

# Configs for write file-per-process, read with shared access
# SCR_CACHE_BYPASS=0
# SCR_GLOBAL_RESTART=1

# Whether to enable any form of logging of SCR events.
#SCR_LOG_ENABLE=0

# Whether to log SCR events to text file in prefix directory at
# $SCR_PREFIX/.scr/log. SCR_LOG_ENABLE must be set to 1 for this parameter to be
# active.
#SCR_LOG_TXT_ENABLE=0
